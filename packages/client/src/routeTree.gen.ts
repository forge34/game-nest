/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LibraryRouteRouteImport } from './routes/library/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIndexRouteImport } from './routes/user/index'
import { Route as DiscoverIndexRouteImport } from './routes/discover/index'
import { Route as CollectionsIndexRouteImport } from './routes/collections/index'
import { Route as UserProfileRouteImport } from './routes/user/profile'
import { Route as DiscoverGameIdRouteImport } from './routes/discover/$gameId'
import { Route as CollectionsCollectionIdRouteRouteImport } from './routes/collections/$collectionId/route'
import { Route as LibraryGameIdEditRouteImport } from './routes/library/$gameId.edit'
import { Route as CollectionsCollectionIdEditRouteImport } from './routes/collections/$collectionId/edit'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryRouteRoute = LibraryRouteRouteImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIndexRoute = UserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscoverIndexRoute = DiscoverIndexRouteImport.update({
  id: '/discover/',
  path: '/discover/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsIndexRoute = CollectionsIndexRouteImport.update({
  id: '/collections/',
  path: '/collections/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserProfileRoute = UserProfileRouteImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscoverGameIdRoute = DiscoverGameIdRouteImport.update({
  id: '/discover/$gameId',
  path: '/discover/$gameId',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsCollectionIdRouteRoute =
  CollectionsCollectionIdRouteRouteImport.update({
    id: '/collections/$collectionId',
    path: '/collections/$collectionId',
    getParentRoute: () => rootRouteImport,
  } as any)
const LibraryGameIdEditRoute = LibraryGameIdEditRouteImport.update({
  id: '/$gameId/edit',
  path: '/$gameId/edit',
  getParentRoute: () => LibraryRouteRoute,
} as any)
const CollectionsCollectionIdEditRoute =
  CollectionsCollectionIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => CollectionsCollectionIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/library': typeof LibraryRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/collections/$collectionId': typeof CollectionsCollectionIdRouteRouteWithChildren
  '/discover/$gameId': typeof DiscoverGameIdRoute
  '/user/profile': typeof UserProfileRoute
  '/collections': typeof CollectionsIndexRoute
  '/discover': typeof DiscoverIndexRoute
  '/user': typeof UserIndexRoute
  '/collections/$collectionId/edit': typeof CollectionsCollectionIdEditRoute
  '/library/$gameId/edit': typeof LibraryGameIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/library': typeof LibraryRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/collections/$collectionId': typeof CollectionsCollectionIdRouteRouteWithChildren
  '/discover/$gameId': typeof DiscoverGameIdRoute
  '/user/profile': typeof UserProfileRoute
  '/collections': typeof CollectionsIndexRoute
  '/discover': typeof DiscoverIndexRoute
  '/user': typeof UserIndexRoute
  '/collections/$collectionId/edit': typeof CollectionsCollectionIdEditRoute
  '/library/$gameId/edit': typeof LibraryGameIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/library': typeof LibraryRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/collections/$collectionId': typeof CollectionsCollectionIdRouteRouteWithChildren
  '/discover/$gameId': typeof DiscoverGameIdRoute
  '/user/profile': typeof UserProfileRoute
  '/collections/': typeof CollectionsIndexRoute
  '/discover/': typeof DiscoverIndexRoute
  '/user/': typeof UserIndexRoute
  '/collections/$collectionId/edit': typeof CollectionsCollectionIdEditRoute
  '/library/$gameId/edit': typeof LibraryGameIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/library'
    | '/login'
    | '/signup'
    | '/collections/$collectionId'
    | '/discover/$gameId'
    | '/user/profile'
    | '/collections'
    | '/discover'
    | '/user'
    | '/collections/$collectionId/edit'
    | '/library/$gameId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/library'
    | '/login'
    | '/signup'
    | '/collections/$collectionId'
    | '/discover/$gameId'
    | '/user/profile'
    | '/collections'
    | '/discover'
    | '/user'
    | '/collections/$collectionId/edit'
    | '/library/$gameId/edit'
  id:
    | '__root__'
    | '/'
    | '/library'
    | '/login'
    | '/signup'
    | '/collections/$collectionId'
    | '/discover/$gameId'
    | '/user/profile'
    | '/collections/'
    | '/discover/'
    | '/user/'
    | '/collections/$collectionId/edit'
    | '/library/$gameId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LibraryRouteRoute: typeof LibraryRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  CollectionsCollectionIdRouteRoute: typeof CollectionsCollectionIdRouteRouteWithChildren
  DiscoverGameIdRoute: typeof DiscoverGameIdRoute
  UserProfileRoute: typeof UserProfileRoute
  CollectionsIndexRoute: typeof CollectionsIndexRoute
  DiscoverIndexRoute: typeof DiscoverIndexRoute
  UserIndexRoute: typeof UserIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library': {
      id: '/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discover/': {
      id: '/discover/'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof DiscoverIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/': {
      id: '/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof CollectionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/profile': {
      id: '/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discover/$gameId': {
      id: '/discover/$gameId'
      path: '/discover/$gameId'
      fullPath: '/discover/$gameId'
      preLoaderRoute: typeof DiscoverGameIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/$collectionId': {
      id: '/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/collections/$collectionId'
      preLoaderRoute: typeof CollectionsCollectionIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/$gameId/edit': {
      id: '/library/$gameId/edit'
      path: '/$gameId/edit'
      fullPath: '/library/$gameId/edit'
      preLoaderRoute: typeof LibraryGameIdEditRouteImport
      parentRoute: typeof LibraryRouteRoute
    }
    '/collections/$collectionId/edit': {
      id: '/collections/$collectionId/edit'
      path: '/edit'
      fullPath: '/collections/$collectionId/edit'
      preLoaderRoute: typeof CollectionsCollectionIdEditRouteImport
      parentRoute: typeof CollectionsCollectionIdRouteRoute
    }
  }
}

interface LibraryRouteRouteChildren {
  LibraryGameIdEditRoute: typeof LibraryGameIdEditRoute
}

const LibraryRouteRouteChildren: LibraryRouteRouteChildren = {
  LibraryGameIdEditRoute: LibraryGameIdEditRoute,
}

const LibraryRouteRouteWithChildren = LibraryRouteRoute._addFileChildren(
  LibraryRouteRouteChildren,
)

interface CollectionsCollectionIdRouteRouteChildren {
  CollectionsCollectionIdEditRoute: typeof CollectionsCollectionIdEditRoute
}

const CollectionsCollectionIdRouteRouteChildren: CollectionsCollectionIdRouteRouteChildren =
  {
    CollectionsCollectionIdEditRoute: CollectionsCollectionIdEditRoute,
  }

const CollectionsCollectionIdRouteRouteWithChildren =
  CollectionsCollectionIdRouteRoute._addFileChildren(
    CollectionsCollectionIdRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LibraryRouteRoute: LibraryRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  CollectionsCollectionIdRouteRoute:
    CollectionsCollectionIdRouteRouteWithChildren,
  DiscoverGameIdRoute: DiscoverGameIdRoute,
  UserProfileRoute: UserProfileRoute,
  CollectionsIndexRoute: CollectionsIndexRoute,
  DiscoverIndexRoute: DiscoverIndexRoute,
  UserIndexRoute: UserIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
